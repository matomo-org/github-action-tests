name: 'Matomo Tests'
description: 'Running Matomo Tests'
inputs:
  is-plugin: # id of input
    description: 'is plugin or core'
    required: true
    default: false
  test-type:
    description: '"UnitTests","SystemTestsPlugins","SystemTestsCore","IntegrationTestsCore","IntegrationTestsPlugins","UI"'
    required: true
  php-version:
    description: '7.2-8.1'
    required: true
    default: '7.2'
  database-adapter:
    description: 'PDO_MYSQL or MYSQLI'
    required: false
    default: 'PDO_MYSQL'
  node-version:
    description: 'node version default 12'
    required: false
    default: '12'
  secrets:
    description: ''
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout code Plugin
      if: ${{ inputs.is-plugin }}
      uses: actions/checkout@v2
      with:
        repository: matomo-org/matomo
        lfs: false
        submodules: recursive
        path: ./matomo

    - name: Move File to right place
      if: ${{ inputs.is-plugin }}
      shell: bash
      run: |
        mkdir /home/runner/work/matomo
        mv ./matomo /home/runner/work/matomo/

    - name: Checkout code
      if: ${{ inputs.is-plugin }} == false
      uses: actions/checkout@v2
      with:
        lfs: ${{ inputs.test-type }}=='UI'?true:false
        submodules: recursive

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions:  bcmath, ldap, curl, zip, pdo_mysql, mysqli, gd, redis
        ini-values: |
          memory_limit = 256M,
          max_execution_time=10000,
          always_populate_raw_post_data=-1,
          error_reporting=E_ALL,
          log_errors=on, display_errors=on,
          allow_url_fopen = on,
          zend.exception_ignore_args = Off
          mysqli.allow_local_infile = On
        tools: composer:v2
        coverage: none

    - name: Setup Node
      if: ${{ inputs.test-type }} == 'UI' ||  ${{ inputs.test-type }} == 'JS'
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-version }}

    - name: prepare setup
      shell: bash
      run: ./scripts/bash/prepare.sh
      env:
        PHP_VERSION: ${{ inputs.php-version }}
        MATOMO_TEST_TARGET: ${{ inputs.test-type }}
        MYSQL_ADAPTER: ${{ inputs.database-adapter }}


    - name: PluginTests ${{ inputs.test-type }} Test is runing
      if: ${{ inputs.is-plugin }}
      shell: bash
      run: ./scripts/bash/plugins/pluginTests.sh
      env:
        TEST_SUITE: ${{ matrix.type }}
        PLUGIN_NAME: ${{ env.PLUGIN }}

    - name: ${{ inputs.test-type }} Test is running
      if: ${{ inputs.is-plugin }} == false && ${{ inputs.test-type }} != 'UI' &&  ${{ inputs.test-type }} != 'JS'
      shell: bash
      run: |
        ./vendor/phpunit/phpunit/phpunit --configuration ./tests/PHPUnit/phpunit.xml --testsuite ${{ inputs.test-type }}
      env:
        TRAVIS: true
        GITHUB: true
        PHP_VERSION: ${{ inputs.php-version }}
        MYSQL_ADAPTER: ${{ inputs.database-adapter }}

    - name: UI tests Group ${{ matrix.parts }}
      if:  ${{ inputs.is-plugin }} == 'UI'
      shell: bash
      env:
        GITHUB: true
      run: |
        ./console tests:run-ui --store-in-ui-tests-repo --persist-fixture-data --assume-artifacts --core --extra-options="--num-test-groups=8 --test-group=${{ matrix.parts }}"

    - name: upload processed screenshots
      if: failure() && ${{ inputs.is-plugin }} == 'UI'
      shell: bash
      run: ./scripts/bash/upload_artifacts.sh
      env:
        ARTIFACTS_PASS: ${{ inputs.secrets }}
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_BRANCH: ${{ github.event.pull_request.base.ref }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}

    - name: View UI failures
      if: failure() && ${{ inputs.is-plugin }} == 'UI'
      shell: bash
      run: ./scripts/bash/view_ui_failed.sh
      env:
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_BRANCH: ${{ github.event.pull_request.base.ref }}
          GITHUB_RUN_ID: ${{ github.run_id }}
